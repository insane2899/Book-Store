{"ast":null,"code":"var _jsxFileName = \"/home/soumik/Desktop/Java/Java EE projects/Book Catalogue/frontend/src/components/AddBook.js\";\nimport React, { Component } from 'react';\nimport { Form, Card, Button, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave, faPlusSquare, faUndo, faList } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nclass AddBook extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: '',\n      title: '',\n      author: '',\n      isbn: '',\n      cost: ''\n    };\n\n    this.findBookById = id => {\n      axios.get(\"http://localhost:8080/api/books/\" + id).then(res => {\n        if (res.data != null) {\n          this.setState({\n            id: id,\n            title: res.data.name,\n            author: res.data.author,\n            isbn: res.data.isbn,\n            cost: res.data.cost\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.resetBook = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n\n      if (this.state.id == null) {\n        var book = {\n          name: this.state.title,\n          author: this.state.author,\n          isbn: this.state.isbn,\n          cost: this.state.cost\n        };\n        axios({\n          method: 'post',\n          url: 'http://localhost:8080/api/books',\n          data: book\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n        alert('Book Submitted');\n      } else {\n        var book = {\n          name: this.state.title,\n          author: this.state.author,\n          isbn: this.state.isbn,\n          cost: this.state.cost\n        };\n        axios({\n          method: 'put',\n          url: 'http://localhost:8080/api/books/' + this.state.id,\n          data: book\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n        alert('Book Edited');\n      }\n\n      this.setState(() => this.initialState);\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n\n    if (bookId) {\n      this.findBookById(bookId);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlusSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }\n    }), \" Add New Book\"), /*#__PURE__*/React.createElement(Form, {\n      onReset: this.resetBook,\n      onSubmit: this.submitBook,\n      id: \"bookFormId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"title\",\n      value: this.state.title,\n      onChange: this.bookChange,\n      type: \"text\",\n      placeholder: \"Enter Title\",\n      className: \"bg-dark text-white\",\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridAuthor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Author\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"author\",\n      value: this.state.author,\n      onChange: this.bookChange,\n      name: \"author\",\n      type: \"text\",\n      placeholder: \"Enter Author\",\n      className: \"bg-dark text-white\",\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridISBN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"ISBN\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"isbn\",\n      value: this.state.isbn,\n      onChange: this.bookChange,\n      name: \"isbn\",\n      type: \"text\",\n      placeholder: \"Enter ISBN\",\n      className: \"bg-dark text-white\",\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, \"Cost\"), /*#__PURE__*/React.createElement(Form.Control, {\n      required: true,\n      name: \"cost\",\n      value: this.state.cost,\n      onChange: this.bookChange,\n      name: \"cost\",\n      type: \"text\",\n      placeholder: \"Enter Cost\",\n      className: \"bg-dark text-white\",\n      autocomplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), \" Submit\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), \" Reset\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      type: \"button\",\n      onClick: this.bookList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), \" Book List\"))));\n  }\n\n}\n\nexport default AddBook;","map":{"version":3,"sources":["/home/soumik/Desktop/Java/Java EE projects/Book Catalogue/frontend/src/components/AddBook.js"],"names":["React","Component","Form","Card","Button","Col","FontAwesomeIcon","faSave","faPlusSquare","faUndo","faList","axios","AddBook","constructor","props","initialState","id","title","author","isbn","cost","findBookById","get","then","res","data","setState","name","catch","err","console","log","bookList","history","push","resetBook","submitBook","event","preventDefault","state","book","method","url","alert","bookChange","target","value","componentDidMount","bookId","match","params","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Form,Card,Button,Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSave,faPlusSquare,faUndo,faList} from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\n\nclass AddBook extends Component {\n\n  constructor(props){\n    super(props);\n    this.state=this.initialState;\n  }\n\n  initialState={\n    id:'',title:'',author:'',isbn:'',cost:''\n  }\n\n  componentDidMount(){\n    const bookId = +this.props.match.params.id;\n    if(bookId){\n      this.findBookById(bookId);\n    }\n  }\n\n  findBookById = (id) =>{\n    axios.get(\"http://localhost:8080/api/books/\"+id)\n    .then(res=>{\n      if(res.data != null){\n        this.setState({\n          id: id,\n          title: res.data.name,\n          author: res.data.author,\n          isbn: res.data.isbn,\n          cost: res.data.cost\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  bookList=()=>{\n    return this.props.history.push(\"/list\");\n  }\n\n  resetBook=()=>{\n    this.setState(()=>this.initialState);\n  }\n\n  submitBook=(event)=>{\n    event.preventDefault();\n    if(this.state.id==null){\n      var book = {name: this.state.title, author: this.state.author, isbn: this.state.isbn, cost:this.state.cost};\n      axios({\n        method: 'post',\n        url: 'http://localhost:8080/api/books',\n        data: book\n      })\n      .then((res)=>{\n        console.log(res)\n      })\n      .catch((err)=>{\n        console.log(err)\n      });\n      alert('Book Submitted');\n    }\n    else{\n      var book = {name: this.state.title, author: this.state.author, isbn: this.state.isbn, cost: this.state.cost};\n      axios({\n        method: 'put',\n        url: 'http://localhost:8080/api/books/'+this.state.id,\n        data: book\n      })\n      .then((res)=>{\n        console.log(res)\n      })\n      .catch((err)=>{\n        console.log(err)\n      });\n      alert('Book Edited');\n    }\n    this.setState(()=>this.initialState);\n\n  }\n\n  bookChange=(event)=>{\n    this.setState({\n      [event.target.name]:event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Card className={\"border border-dark bg-dark text-white\"}>\n        <Card.Header><FontAwesomeIcon icon={faPlusSquare}/> Add New Book</Card.Header>\n        <Form onReset={this.resetBook} onSubmit={this.submitBook} id=\"bookFormId\">\n          <Card.Body>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridTitle\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control required name=\"title\" value={this.state.title} onChange={this.bookChange} type=\"text\" placeholder=\"Enter Title\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridAuthor\">\n                <Form.Label>Author</Form.Label>\n                <Form.Control required name=\"author\" value={this.state.author} onChange={this.bookChange} name=\"author\" type=\"text\" placeholder=\"Enter Author\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridISBN\">\n                <Form.Label>ISBN</Form.Label>\n                <Form.Control required name=\"isbn\" value={this.state.isbn} onChange={this.bookChange} name=\"isbn\" type=\"text\" placeholder=\"Enter ISBN\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridCost\">\n                <Form.Label>Cost</Form.Label>\n                <Form.Control required name=\"cost\" value={this.state.cost} onChange={this.bookChange} name=\"cost\" type=\"text\" placeholder=\"Enter Cost\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n            </Form.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button variant=\"success\" type=\"submit\">\n                <FontAwesomeIcon icon={faSave}/> Submit\n              </Button>{' '}\n              <Button variant=\"info\" type=\"reset\">\n                <FontAwesomeIcon icon={faUndo}/> Reset\n              </Button>{' '}\n              <Button variant=\"info\" type=\"button\" onClick={this.bookList}>\n                <FontAwesomeIcon icon={faList}/> Book List\n              </Button>\n          </Card.Footer>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nexport default AddBook;\n"]},"metadata":{},"sourceType":"module"}