{"version":3,"sources":["components/NavigationBar.js","components/Welcome.js","components/Footer.js","components/AddBook.js","components/BookList.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","bg","variant","className","to","Nav","Component","Welcome","Jumbotron","Footer","fullYear","Date","getFullYear","fixed","Container","Col","lg","AddBook","props","initialState","id","title","author","isbn","cost","findBookById","axios","get","then","res","data","setState","name","catch","err","console","log","bookList","history","push","resetBook","submitBook","event","preventDefault","state","book","method","url","alert","bookChange","target","value","bookId","this","match","params","Card","Header","icon","faPlusSquare","Form","onReset","onSubmit","Body","Row","Group","as","controlId","Label","Control","required","onChange","type","placeholder","autocomplete","Button","faSave","faUndo","onClick","faList","BookList","deleteItem","index","delete","window","location","reload","updateItem","books","Table","bordered","hover","striped","map","key","ButtonGroup","faEdit","size","bind","faTrash","App","style","marginTop","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"+RAqBeA,E,uKAbX,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAAC,IAAD,CAAMC,UAAU,eAAeC,GAAI,IAAnC,QACA,kBAACC,EAAA,EAAD,CAAKF,UAAU,WACb,kBAAC,IAAD,CAAMC,GAAI,OAAQD,UAAU,YAA5B,YACA,kBAAC,IAAD,CAAMC,GAAI,QAASD,UAAU,YAA7B,mB,GARkBG,a,+CCWbC,E,uKAVX,OACE,kBAACC,EAAA,EAAD,CAAWL,UAAU,sBACnB,2DACA,oF,GANcG,aCiBPG,E,uKAdX,IAAIC,GAAW,IAAIC,MAAOC,cAC1B,OACE,kBAACZ,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOW,MAAM,UACrC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIb,UAAU,0BACrB,6BAAMO,EAAN,IAAiBA,EAAS,EAA1B,yC,GARSJ,a,gECqINW,E,kDAhIb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAIRC,aAAa,CACXC,GAAG,GAAGC,MAAM,GAAGC,OAAO,GAAGC,KAAK,GAAGC,KAAK,IANtB,EAgBlBC,aAAe,SAACL,GACdM,IAAMC,IAAI,qDAAqDP,GAC9DQ,MAAK,SAAAC,GACW,MAAZA,EAAIC,MACL,EAAKC,SAAS,CACZX,GAAIA,EACJC,MAAOQ,EAAIC,KAAKE,KAChBV,OAAQO,EAAIC,KAAKR,OACjBC,KAAMM,EAAIC,KAAKP,KACfC,KAAMK,EAAIC,KAAKN,UAGlBS,OAAM,SAAAC,GACPC,QAAQC,IAAIF,OA7BE,EAiClBG,SAAS,WACP,OAAO,EAAKnB,MAAMoB,QAAQC,KAAK,UAlCf,EAqClBC,UAAU,WACR,EAAKT,UAAS,kBAAI,EAAKZ,iBAtCP,EAyClBsB,WAAW,SAACC,GAEV,GADAA,EAAMC,iBACa,KAAhB,EAAKC,MAAMxB,GAAQ,CACpB,IAAIyB,EAAO,CAACb,KAAM,EAAKY,MAAMvB,MAAOC,OAAQ,EAAKsB,MAAMtB,OAAQC,KAAM,EAAKqB,MAAMrB,KAAMC,KAAK,EAAKoB,MAAMpB,MACtGE,IAAM,CACJoB,OAAQ,OACRC,IAAK,oDACLjB,KAAMe,IAEPjB,MAAK,SAACC,GACLM,QAAQC,IAAIP,MAEbI,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEdc,MAAM,sBAEJ,CACEH,EAAO,CAACb,KAAM,EAAKY,MAAMvB,MAAOC,OAAQ,EAAKsB,MAAMtB,OAAQC,KAAM,EAAKqB,MAAMrB,KAAMC,KAAM,EAAKoB,MAAMpB,MACvGE,IAAM,CACJoB,OAAQ,MACRC,IAAK,qDAAqD,EAAKH,MAAMxB,GACrEU,KAAMe,IAEPjB,MAAK,SAACC,GACLM,QAAQC,IAAIP,MAEbI,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEdc,MAAM,eAER,EAAKjB,UAAS,kBAAI,EAAKZ,iBAzEP,EA6ElB8B,WAAW,SAACP,GACV,EAAKX,SAAL,eACGW,EAAMQ,OAAOlB,KAAMU,EAAMQ,OAAOC,SA7EnC,EAAKP,MAAM,EAAKzB,aAFA,E,gEAUhB,IAAMiC,GAAUC,KAAKnC,MAAMoC,MAAMC,OAAOnC,GACrCgC,GACDC,KAAK5B,aAAa2B,K,+BAuEZ,IAAD,MACP,OACE,kBAACI,EAAA,EAAD,CAAMrD,UAAW,yCACf,kBAACqD,EAAA,EAAKC,OAAN,KAAa,kBAAC,IAAD,CAAiBC,KAAMC,MAApC,iBACA,kBAACC,EAAA,EAAD,CAAMC,QAASR,KAAKb,UAAWsB,SAAUT,KAAKZ,WAAYrB,GAAG,cAC3D,kBAACoC,EAAA,EAAKO,KAAN,KACE,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,GAAInD,IAAKoD,UAAU,iBAC7B,kBAACP,EAAA,EAAKQ,MAAN,cACA,kBAACR,EAAA,EAAKS,QAAN,CAAcC,UAAQ,EAACtC,KAAK,QAAQmB,MAAOE,KAAKT,MAAMvB,MAAOkD,SAAUlB,KAAKJ,WAAYuB,KAAK,OAAOC,YAAY,cAActE,UAAW,qBAAsBuE,aAAa,SAE9K,kBAACd,EAAA,EAAKK,MAAN,CAAYC,GAAInD,IAAKoD,UAAU,kBAC7B,kBAACP,EAAA,EAAKQ,MAAN,eACA,kBAACR,EAAA,EAAKS,SAAN,GAAcC,UAAQ,EAACtC,KAAK,SAASmB,MAAOE,KAAKT,MAAMtB,OAAQiD,SAAUlB,KAAKJ,YAA9E,qBAA+F,UAA/F,qBAA6G,QAA7G,4BAAgI,gBAAhI,0BAA0J,sBAA1J,6BAA6L,OAA7L,MAGJ,kBAACW,EAAA,EAAKI,IAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,CAAYC,GAAInD,IAAKoD,UAAU,gBAC7B,kBAACP,EAAA,EAAKQ,MAAN,aACA,kBAACR,EAAA,EAAKS,SAAN,GAAcC,UAAQ,EAACtC,KAAK,OAAOmB,MAAOE,KAAKT,MAAMrB,KAAMgD,SAAUlB,KAAKJ,YAA1E,qBAA2F,QAA3F,qBAAuG,QAAvG,4BAA0H,cAA1H,0BAAkJ,sBAAlJ,6BAAqL,OAArL,KAEF,kBAACW,EAAA,EAAKK,MAAN,CAAYC,GAAInD,IAAKoD,UAAU,gBAC7B,kBAACP,EAAA,EAAKQ,MAAN,aACA,kBAACR,EAAA,EAAKS,SAAN,GAAcC,UAAQ,EAACtC,KAAK,OAAOmB,MAAOE,KAAKT,MAAMpB,KAAM+C,SAAUlB,KAAKJ,YAA1E,qBAA2F,QAA3F,qBAAuG,QAAvG,4BAA0H,cAA1H,0BAAkJ,sBAAlJ,6BAAqL,OAArL,OAIJ,kBAACO,EAAA,EAAK/C,OAAN,KACE,kBAACkE,EAAA,EAAD,CAAQzE,QAAQ,UAAUsE,KAAK,UAC7B,kBAAC,IAAD,CAAiBd,KAAMkB,MADzB,WAEU,IACV,kBAACD,EAAA,EAAD,CAAQzE,QAAQ,OAAOsE,KAAK,SAC1B,kBAAC,IAAD,CAAiBd,KAAMmB,MADzB,UAEU,IACV,kBAACF,EAAA,EAAD,CAAQzE,QAAQ,OAAOsE,KAAK,SAASM,QAASzB,KAAKhB,UACjD,kBAAC,IAAD,CAAiBqB,KAAMqB,MADzB,qB,GAvHQzE,a,gBC+EP0E,E,kDA5Eb,WAAY9D,GAAO,IAAD,8BAChB,cAAMA,IAeR+D,WAAW,SAACC,GACVxD,IAAMyD,OAAO,qDAAqDD,GACjEtD,MAAK,SAAAC,GACS,MAAVA,EAAIC,OACLkB,MAAM,6BACNoC,OAAOC,SAASC,cArBJ,EA0BlBC,WAAW,SAAC7C,GACVA,EAAMC,iBACNK,MAAM,YA1BN,EAAKJ,MAAM,CACT4C,MAAM,IAHQ,E,gEAOE,IAAD,OACjB9D,IAAMC,IAAI,qDACTC,MAAK,SAACC,GACL,EAAKE,SAAS,CACZyD,MAAO3D,EAAIC,Y,+BAoBP,IAAD,OACP,OACE,kBAAC0B,EAAA,EAAD,CAAMrD,UAAW,yCACf,kBAACqD,EAAA,EAAKC,OAAN,KAAa,kBAAC,IAAD,CAAiBC,KAAMqB,MAApC,cACA,kBAACvB,EAAA,EAAKO,KAAN,KACE,kBAAC0B,EAAA,EAAD,CAAOC,UAAQ,EAACC,OAAK,EAACC,SAAO,EAAC1F,QAAQ,QACpC,+BACE,4BACE,iCACA,qCACA,sCACA,2CACA,qCACA,yCAGJ,+BAGImD,KAAKT,MAAM4C,MAAMK,KAAI,SAAChD,EAAKqC,GAAN,OACnB,4BACE,wBAAIY,IAAKZ,GAAQA,EAAM,GACvB,4BAAKrC,EAAKb,MACV,4BAAKa,EAAKvB,QACV,4BAAKuB,EAAKtB,MACV,4BAAKsB,EAAKrB,MACV,4BACE,kBAACuE,EAAA,EAAD,KACE,kBAAC,IAAD,CAAM3F,GAAI,SAAS8E,EAAO/E,UAAU,kCAAiC,kBAAC,IAAD,CAAiBuD,KAAMsC,OAAiB,IAC7G,kBAACrB,EAAA,EAAD,CAAQsB,KAAK,KAAKnB,QAAS,EAAKG,WAAWiB,KAAK,EAAKhB,GAAQhF,QAAQ,kBAAiB,kBAAC,IAAD,CAAiBwD,KAAMyC,qB,GA9D9G7F,aC8BR8F,MA3Bf,WAOE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAACtF,EAAA,EAAD,KACE,kBAACkD,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAKC,GAAI,GAAIqF,MAVH,CAChBC,UAAU,SAUF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlG,IACjC,kBAAC,IAAD,CAAOgG,KAAK,QAAQC,OAAK,EAACC,UAAWzB,IACrC,kBAAC,IAAD,CAAOuB,KAAK,OAAOC,OAAK,EAACC,UAAWxF,IACpC,kBAAC,IAAD,CAAOsF,KAAK,YAAYC,OAAK,EAACC,UAAWxF,QAKjD,kBAAC,EAAD,QCpBcyF,QACW,cAA7BtB,OAAOC,SAASsB,UAEe,UAA7BvB,OAAOC,SAASsB,UAEhBvB,OAAOC,SAASsB,SAASrD,MACvB,2DCZNsD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvF,MAAK,SAAAwF,GACJA,EAAaC,gBAEdpF,OAAM,SAAAqF,GACLnF,QAAQmF,MAAMA,EAAMC,c","file":"static/js/main.90936ba0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {Navbar,Nav} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nclass NavigationBar extends Component {\n\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Link className=\"navbar-brand\" to={\"\"}>Home</Link>\n        <Nav className=\"mr-auto\">\n          <Link to={\"/add\"} className=\"nav-link\">Add Book</Link>\n          <Link to={\"/list\"} className=\"nav-link\">Book List</Link>\n        </Nav>\n      </Navbar>\n    );\n  }\n\n}\n\nexport default NavigationBar;\n","import React, { Component } from 'react';\nimport {Jumbotron} from 'react-bootstrap';\n\nclass Welcome extends Component {\n\n  render() {\n    return (\n      <Jumbotron className=\"bg-dark text-white\">\n        <h1>Welcome to Insane's Library</h1>\n        <p>Too many books to read, too little time at hand.</p>\n      </Jumbotron>\n    );\n  }\n\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport {Navbar,Container,Col} from 'react-bootstrap';\n\nclass Footer extends Component {\n\n  render() {\n    let fullYear = new Date().getFullYear();\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\">\n        <Container>\n          <Col lg={12} className=\"text-center text-muted\">\n            <div>{fullYear}-{fullYear+1} All Rights Reserved by Insane</div>\n          </Col>\n        </Container>\n      </Navbar>\n    );\n  }\n\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport {Form,Card,Button,Col} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faSave,faPlusSquare,faUndo,faList} from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\n\nclass AddBook extends Component {\n\n  constructor(props){\n    super(props);\n    this.state=this.initialState;\n  }\n\n  initialState={\n    id:'',title:'',author:'',isbn:'',cost:''\n  }\n\n  componentDidMount(){\n    const bookId = +this.props.match.params.id;\n    if(bookId){\n      this.findBookById(bookId);\n    }\n  }\n\n  findBookById = (id) =>{\n    axios.get(\"https://soumik-book-store.herokuapp.com/api/books/\"+id)\n    .then(res=>{\n      if(res.data != null){\n        this.setState({\n          id: id,\n          title: res.data.name,\n          author: res.data.author,\n          isbn: res.data.isbn,\n          cost: res.data.cost\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  bookList=()=>{\n    return this.props.history.push(\"/list\");\n  }\n\n  resetBook=()=>{\n    this.setState(()=>this.initialState);\n  }\n\n  submitBook=(event)=>{\n    event.preventDefault();\n    if(this.state.id===''){\n      var book = {name: this.state.title, author: this.state.author, isbn: this.state.isbn, cost:this.state.cost};\n      axios({\n        method: 'post',\n        url: 'https://soumik-book-store.herokuapp.com/api/books',\n        data: book\n      })\n      .then((res)=>{\n        console.log(res)\n      })\n      .catch((err)=>{\n        console.log(err)\n      });\n      alert('Book Submitted');\n    }\n    else{\n      var book = {name: this.state.title, author: this.state.author, isbn: this.state.isbn, cost: this.state.cost};\n      axios({\n        method: 'put',\n        url: 'https://soumik-book-store.herokuapp.com/api/books/'+this.state.id,\n        data: book\n      })\n      .then((res)=>{\n        console.log(res)\n      })\n      .catch((err)=>{\n        console.log(err)\n      });\n      alert('Book Edited');\n    }\n    this.setState(()=>this.initialState);\n\n  }\n\n  bookChange=(event)=>{\n    this.setState({\n      [event.target.name]:event.target.value\n    });\n  }\n\n  render() {\n    return (\n      <Card className={\"border border-dark bg-dark text-white\"}>\n        <Card.Header><FontAwesomeIcon icon={faPlusSquare}/> Add New Book</Card.Header>\n        <Form onReset={this.resetBook} onSubmit={this.submitBook} id=\"bookFormId\">\n          <Card.Body>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridTitle\">\n                <Form.Label>Title</Form.Label>\n                <Form.Control required name=\"title\" value={this.state.title} onChange={this.bookChange} type=\"text\" placeholder=\"Enter Title\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridAuthor\">\n                <Form.Label>Author</Form.Label>\n                <Form.Control required name=\"author\" value={this.state.author} onChange={this.bookChange} name=\"author\" type=\"text\" placeholder=\"Enter Author\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridISBN\">\n                <Form.Label>ISBN</Form.Label>\n                <Form.Control required name=\"isbn\" value={this.state.isbn} onChange={this.bookChange} name=\"isbn\" type=\"text\" placeholder=\"Enter ISBN\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n              <Form.Group as={Col} controlId=\"formGridCost\">\n                <Form.Label>Cost</Form.Label>\n                <Form.Control required name=\"cost\" value={this.state.cost} onChange={this.bookChange} name=\"cost\" type=\"text\" placeholder=\"Enter Cost\" className={\"bg-dark text-white\"} autocomplete=\"off\"/>\n              </Form.Group>\n            </Form.Row>\n            </Card.Body>\n            <Card.Footer>\n              <Button variant=\"success\" type=\"submit\">\n                <FontAwesomeIcon icon={faSave}/> Submit\n              </Button>{' '}\n              <Button variant=\"info\" type=\"reset\">\n                <FontAwesomeIcon icon={faUndo}/> Reset\n              </Button>{' '}\n              <Button variant=\"info\" type=\"button\" onClick={this.bookList}>\n                <FontAwesomeIcon icon={faList}/> Book List\n              </Button>\n          </Card.Footer>\n        </Form>\n      </Card>\n    );\n  }\n\n}\n\nexport default AddBook;\n","import React, { Component } from 'react';\nimport {Card,Table,ButtonGroup,Button} from 'react-bootstrap';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faList,faEdit,faTrash} from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass BookList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      books:[]\n    };\n  }\n\n  componentDidMount(){\n    axios.get('https://soumik-book-store.herokuapp.com/api/books')\n    .then((res)=>{\n      this.setState({\n        books: res.data\n      })\n    });\n  }\n\n  deleteItem=(index)=>{\n    axios.delete(\"https://soumik-book-store.herokuapp.com/api/books/\"+index)\n    .then(res=>{\n      if(res.data!=null){\n        alert('Book Deleted Successfully');\n        window.location.reload();\n      }\n    });\n  }\n\n  updateItem=(event)=>{\n    event.preventDefault();\n    alert('Updated');\n  }\n\n  render() {\n    return (\n      <Card className={\"border border-dark bg-dark text-white\"}>\n        <Card.Header><FontAwesomeIcon icon={faList}/> Book List</Card.Header>\n        <Card.Body>\n          <Table bordered hover striped variant=\"dark\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Title</th>\n                <th>Author</th>\n                <th>ISBN Number</th>\n                <th>Price</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n\n                this.state.books.map((book,index)=>\n                  <tr>\n                    <td key={index}>{index+1}</td>\n                    <td>{book.name}</td>\n                    <td>{book.author}</td>\n                    <td>{book.isbn}</td>\n                    <td>{book.cost}</td>\n                    <td>\n                      <ButtonGroup>\n                        <Link to={\"/edit/\"+index} className=\"btn btn-sm btn-outline-primary\"><FontAwesomeIcon icon={faEdit}/></Link>{' '}\n                        <Button size=\"sm\" onClick={this.deleteItem.bind(this,index)} variant=\"outline-danger\"><FontAwesomeIcon icon={faTrash}/></Button>\n                      </ButtonGroup>\n\n                    </td>\n                  </tr>\n                )\n              }\n            </tbody>\n          </Table>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n}\n\nexport default BookList;\n","import React from 'react';\nimport NavigationBar from './components/NavigationBar';\nimport './App.css';\nimport {Container,Row,Col} from 'react-bootstrap';\nimport {BrowserRouter as Router, Switch,Route} from 'react-router-dom';\nimport Welcome from './components/Welcome';\nimport Footer from './components/Footer';\nimport AddBook from './components/AddBook';\nimport BookList from './components/BookList';\n\nfunction App() {\n\n  const marginTop = {\n    marginTop:\"20px\"\n  };\n\n\n  return (\n    <Router>\n      <NavigationBar/>\n      <Container>\n        <Row>\n          <Col lg={12} style={marginTop}>\n            <Switch>\n              <Route path=\"/\" exact component={Welcome}/>\n              <Route path=\"/list\" exact component={BookList}/>\n              <Route path=\"/add\" exact component={AddBook}/>\n              <Route path=\"/edit/:id\" exact component={AddBook}/>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}